name: Merge Macros (compact UI)

on:
  workflow_dispatch:
    inputs:
      versions:
        description: 'How many versions per group'
        required: false
        default: '1'
      force:
        description: 'Re-run even if outputs exist (true/false)'
        required: false
        default: 'false'
      pause_target:
        description: "Where to put pauses: 'between' files or 'within' files"
        required: true
        default: 'between'
        options:
          - between
          - within
      pause_range:
        description: "Pause length range MIN-MAX (e.g. '10s-4m53s' or '1m-2m47s')"
        required: true
        default: '10s-4m53s'
      pauses_count:
        description: "Min-Max pauses per file (used for 'within' mode), e.g. '2-9'"
        required: false
        default: '2-9'
      advanced_overrides:
        description: "Optional: extra flags (not used by default), e.g. '--seed 999'"
        required: false
        default: ''

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies (if any)
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
          fi

      - name: Run merge_macros (compact)
        env:
          PAUSE_TARGET: ${{ github.event.inputs.pause_target }}
          PAUSE_RANGE: ${{ github.event.inputs.pause_range }}
          PAUSES_COUNT: ${{ github.event.inputs.pauses_count }}
          ADV_OVERRIDES: ${{ github.event.inputs.advanced_overrides }}
        run: |
          ARGS="--versions ${{ github.event.inputs.versions }} --pause-target '${PAUSE_TARGET}' --pause-range '${PAUSE_RANGE}' --pauses-count '${PAUSES_COUNT}'"
          if [ "${{ github.event.inputs.force }}" = "true" ]; then
            ARGS="${ARGS} --force"
          fi
          # Append advanced overrides verbatim if provided (use carefully)
          if [ -n "${ADV_OVERRIDES}" ]; then
            ARGS="${ARGS} ${ADV_OVERRIDES}"
          fi
          echo "Running: python merge_macros.py $ARGS"
          python merge_macros.py $ARGS

      - name: List outputs
        run: ls -la output || true

      - name: Upload merged bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merged-bundle
          path: output/merged_bundle.zip

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: group-logs
          path: output/*_log.txt
