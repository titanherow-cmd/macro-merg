name: Merge Macros (very simple UI)

on:
  workflow_dispatch:
    inputs:
      versions:
        description: 'How many versions per group'
        required: false
        default: '1'
      force:
        description: 'Force run (re-generate even if outputs exist)'
        required: false
        default: 'false'
      pause_target:
        description: "Where to put pauses: 'between' files or 'within' files"
        required: true
        default: 'between'
        options:
          - between
          - within
      pause_min:
        description: "Shortest pause (examples: 10s, 1m, 1:30)"
        required: true
        default: '10s'
      pause_max:
        description: "Longest pause (examples: 30s, 2m47s, 4m53s)"
        required: true
        default: '4m53s'
      min_pauses:
        description: 'Minimum pauses per file (used only for "within" mode)'
        required: false
        default: '2'
      max_pauses:
        description: 'Maximum pauses per file (used only for "within" mode)'
        required: false
        default: '9'

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies (if any)
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
          fi

      - name: Run merge script (simple UI)
        env:
          PAUSE_TARGET: ${{ github.event.inputs.pause_target }}
          PAUSE_MIN: ${{ github.event.inputs.pause_min }}
          PAUSE_MAX: ${{ github.event.inputs.pause_max }}
          MIN_PAUSES: ${{ github.event.inputs.min_pauses }}
          MAX_PAUSES: ${{ github.event.inputs.max_pauses }}
        run: |
          ARGS="--versions ${{ github.event.inputs.versions }} --pause-target '${PAUSE_TARGET}' --pause-min '${PAUSE_MIN}' --pause-max '${PAUSE_MAX}' --min-pauses ${MIN_PAUSES} --max-pauses ${MAX_PAUSES}"
          if [ "${{ github.event.inputs.force }}" = "true" ]; then
            ARGS="${ARGS} --force"
          fi
          echo "Running: python merge_macros.py $ARGS"
          python merge_macros.py $ARGS

      - name: List outputs
        run: ls -la output || true

      - name: Upload merged bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merged-bundle
          path: output/merged_bundle.zip

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: group-logs
          path: output/*_log.txt
