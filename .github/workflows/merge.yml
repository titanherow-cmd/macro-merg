name: Merge Macros (simple UI)

on:
  workflow_dispatch:
    inputs:
      input_dir:
        description: 'Input directory (relative to repo root)'
        required: true
        default: 'input'
      output_dir:
        description: 'Output directory (relative to repo root)'
        required: true
        default: 'output'
      versions:
        description: 'Number of versions per group'
        required: false
        default: '5'
      seed:
        description: 'Random seed (empty = random)'
        required: false
        default: ''
      force:
        description: 'Force processing even if previously processed'
        required: false
        default: 'false'
      intra_file_enabled:
        description: 'Enable intra-file pauses'
        required: false
        default: 'false'
      preset:
        description: 'Preset to use for pause rules'
        required: false
        default: 'default'
        options:
          - default
          - aggressive
          - relaxed
      advanced_overrides:
        description: 'Optional extra CLI flags (e.g. \"--inter-insert-prob 40 --intra-long-min 90s\")'
        required: false
        default: ''

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies (if any)
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
          fi

      - name: Prepare args and run
        env:
          INPUT_DIR: ${{ github.event.inputs.input_dir }}
          OUTPUT_DIR: ${{ github.event.inputs.output_dir }}
          PRESET: ${{ github.event.inputs.preset }}
          ADV: ${{ github.event.inputs.advanced_overrides }}
        run: |
          ARGS="--input-dir '${INPUT_DIR}' --output-dir '${OUTPUT_DIR}' --versions '${{ github.event.inputs.versions }}' --exclude-count 1"

          if [ -n "${{ github.event.inputs.seed }}" ]; then
            ARGS="${ARGS} --seed ${{ github.event.inputs.seed }}"
          fi
          if [ "${{ github.event.inputs.force }}" = "true" ]; then
            ARGS="${ARGS} --force"
          fi
          if [ "${{ github.event.inputs.intra_file_enabled }}" = "true" ]; then
            ARGS="${ARGS} --intra-file-enabled"
          fi

          # Preset mapping: minimal, editable here
          case "${PRESET}" in
            default)
              # matches the script defaults
              PRESET_FLAGS="--intra-long-prob 70 --intra-long-min 1m --intra-long-max 2m47s --intra-long-min-count 2 --intra-long-max-count 9 --intra-short-min 6s --intra-short-max 30s --intra-max-pauses-cap 9 --inter-insert-prob 60 --inter-long-prob 20 --inter-short-max 4m53s --inter-long-min 7m --inter-long-max 10m --post-buffer-min 10s --post-buffer-max 30s"
              ;;
            aggressive)
              # more and longer pauses
              PRESET_FLAGS="--intra-long-prob 85 --intra-long-min 1m --intra-long-max 3m --intra-long-min-count 3 --intra-long-max-count 9 --intra-short-min 10s --intra-short-max 45s --intra-max-pauses-cap 9 --inter-insert-prob 80 --inter-long-prob 40 --inter-short-max 6m --inter-long-min 8m --inter-long-max 12m --post-buffer-min 15s --post-buffer-max 45s"
              ;;
            relaxed)
              # fewer and shorter pauses
              PRESET_FLAGS="--intra-long-prob 50 --intra-long-min 1m --intra-long-max 2m --intra-long-min-count 2 --intra-long-max-count 5 --intra-short-min 4s --intra-short-max 20s --intra-max-pauses-cap 5 --inter-insert-prob 40 --inter-long-prob 10 --inter-short-max 3m --inter-long-min 7m --inter-long-max 9m --post-buffer-min 8s --post-buffer-max 20s"
              ;;
            *)
              PRESET_FLAGS=""
              ;;
          esac

          # Append preset flags and any advanced overrides
          ARGS="${ARGS} ${PRESET_FLAGS} ${ADV}"

          echo "Running: python merge_macros.py $ARGS"
          python merge_macros.py $ARGS

      - name: List output files
        run: ls -la ${{ github.workspace }}/${{ github.event.inputs.output_dir }} || true

      - name: Upload merged ZIP artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merged-bundle
          path: ${{ github.workspace }}/${{ github.event.inputs.output_dir }}/merged_bundle.zip

      - name: Upload per-group logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: group-logs
          path: ${{ github.workspace }}/${{ github.event.inputs.output_dir }}/*_log.txt
